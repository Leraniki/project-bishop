package com.weyland.yutani.core.audit;

import lombok.extern.slf4j.Slf4j;
import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;
import org.springframework.stereotype.Service;

@Service // –ì–æ–≤–æ—Ä–∏–º Spring, —á—Ç–æ —ç—Ç–æ —Å–µ—Ä–≤–∏—Å (–±–∏–Ω)
@Slf4j   // –î–æ–±–∞–≤–ª—è–µ–º –ª–æ–≥–≥–µ—Ä
// üî• –ú–ê–ì–ò–Ø: –≠—Ç–æ—Ç –±–∏–Ω –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω –¢–û–õ–¨–ö–û –ï–°–õ–ò –≤ application.properties –µ—Å—Ç—å —Å–≤–æ–π—Å—Ç–≤–æ
// 'weyland.audit.mode' —Å–æ –∑–Ω–∞—á–µ–Ω–∏–µ–º 'console', –ò–õ–ò –µ—Å–ª–∏ —ç—Ç–æ–≥–æ —Å–≤–æ–π—Å—Ç–≤–∞ –Ω–µ—Ç –≤–æ–æ–±—â–µ (matchIfMissing = true)
@ConditionalOnProperty(name = "weyland.audit.mode", havingValue = "console", matchIfMissing = true)
public class ConsoleAuditService implements AuditService {

    @Override
    public void log(String message) {
        // –ü—Ä–æ—Å—Ç–æ –≤—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∞—É–¥–∏—Ç–∞ –≤ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –ª–æ–≥ —Å –ø–æ–º–µ—Ç–∫–æ–π
        log.info("[WEYLAND-YUTANI AUDIT] {}", message);
    }
}